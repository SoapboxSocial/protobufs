syntax = "proto3";

option go_package = "pkg/rooms/pb";

message Command {
    message MuteUpdate {
        bool muted = 1;
    }

    message Reaction {
        bytes emoji = 1;
    }

    message LinkShare {
        string link = 1;
    }

    message InviteAdmin {
        int64 id = 1;
    }

    message AcceptAdmin {}

    message RemoveAdmin {
        int64 id = 1;
    }

    message RenameRoom {
        string name = 1;
    }

    message InviteUser {
        int64 id = 1;
    }

    message KickUser {
        int64 id = 1;
    }

    message MuteUser {
        int64 id = 1;
    }

    message RecordScreen {}

    oneof payload {
        MuteUpdate muteUpdate = 1;
        Reaction reaction = 2;
        LinkShare linkShare = 3;
        InviteAdmin inviteAdmin = 4;
        AcceptAdmin acceptAdmin = 5;
        RemoveAdmin removeAdmin = 6;
        RenameRoom renameRoom = 7;
        InviteUser inviteUser = 8;
        KickUser kickUser = 9;
        MuteUser muteUser = 10;
        RecordScreen recordScreen = 11;
    }
}

message Event {
    int64 from = 1;

    message Joined {
        RoomState.RoomMember user = 1;
    }

    message Left {
        int64 id = 1;
    }

    message MuteUpdated {
        bool is_muted = 1;
    }

    message Reacted {
        bytes emoji = 1;
    }

    message LinkShared {
        string link = 1;
    }

    message InvitedAdmin {
        int64 id = 1;
    }

    message AddedAdmin {
        int64 id = 1;
    }

    message RemovedAdmin {
        int64 id = 1;
    }

    message RenamedRoom {
        string name = 1;
    }

    message RecordedScreen {
        int64 id = 1;
    }

    message MutedByAdmin {
        int64 id = 1;
    }

    oneof payload {
        Joined joined = 2;
        Left left = 3;
        MuteUpdated muteUpdated = 4;
        Reacted reacted = 5;
        LinkShared linkShared = 6;
        InvitedAdmin invitedAdmin = 7;
        AddedAdmin addedAdmin = 8;
        RemovedAdmin removedAdmin = 9;
        RenamedRoom renamedRoom = 10;
        RecordedScreen recordedScreen = 11;
        MutedByAdmin mutedByAdmin = 12;
    }
}

enum Visibility {
    PUBLIC = 0;
    PRIVATE = 1;
}

message RoomState {
    message RoomMember {
        enum Role {
            REGULAR = 0;
            ADMIN = 1;
        }

        int64 id = 1;
        string displayName = 2;
        string image = 3;
        Role role = 4;
        bool muted = 5;
        uint32 ssrc = 6;
    }

    message Group {
        int64 id = 1;
        string name = 2;
        string image = 3;
    }

    string id = 1;
    string name = 2;
    repeated RoomMember members = 3;
    string role = 4; // @TODO THINK ABOUT ENUM
    Visibility visibility = 5;
    Group group = 6;
}

message RoomQuery {
    string id = 1;
}

message RoomResponse {
    RoomState room = 1;
    string error = 2;
}

service RoomService {
    rpc GetRoom(RoomQuery) returns (RoomResponse);
}
