syntax = "proto3";

package soapbox.v1;

option go_package = "pkg/rooms/pb";

message Command {
    message MuteUpdate {
        bool muted = 1;
    }

    message Reaction {
        bytes emoji = 1;
    }

    message LinkShare {
        string link = 1;
    }

    message InviteAdmin {
        int64 id = 1;
    }

    message AcceptAdmin {}

    message RemoveAdmin {
        int64 id = 1;
    }

    message RenameRoom {
        string name = 1;
    }

    message InviteUser {
        int64 id = 1;
    }

    message KickUser {
        int64 id = 1;
    }

    message MuteUser {
        int64 id = 1;
    }

    message RecordScreen {}

    message VisibilityUpdate {
        Visibility visibility = 1;
    }

    message PinLink {
        string link = 1;
    }

    message UnpinLink {}

    message OpenMini {
        string mini = 1;
        int64 id = 2;
    }

    message CloseMini {}

    oneof payload {
        MuteUpdate mute_update = 1;
        Reaction reaction = 2;
        LinkShare link_share = 3;
        InviteAdmin invite_admin = 4;
        AcceptAdmin accept_admin = 5;
        RemoveAdmin remove_admin = 6;
        RenameRoom rename_room = 7;
        InviteUser invite_user = 8;
        KickUser kick_user = 9;
        MuteUser mute_user = 10;
        RecordScreen record_screen = 11;
        VisibilityUpdate visibility_update = 12;
        PinLink pin_link = 13;
        UnpinLink unpin_link = 14;
        OpenMini open_mini = 15;
        CloseMini close_mini = 16;
    }
}

message Event {
    int64 from = 1;

    message Joined {
        RoomState.RoomMember user = 1;
    }

    message Left {
        int64 id = 1;
    }

    message MuteUpdated {
        bool is_muted = 1;
    }

    message Reacted {
        bytes emoji = 1;
    }

    message LinkShared {
        string link = 1;
    }

    message InvitedAdmin {
        int64 id = 1;
    }

    message AddedAdmin {
        int64 id = 1;
    }

    message RemovedAdmin {
        int64 id = 1;
    }

    message RenamedRoom {
        string name = 1;
    }

    message RecordedScreen {
        int64 id = 1;
    }

    message MutedByAdmin {
        int64 id = 1;
    }

    message VisibilityUpdated {
        Visibility visibility = 1;
    }

    message PinnedLink {
        string link = 1;
    }

    message UnpinnedLink {}

    message OpenedMini {
        string slug = 1 [deprecated = true];
        RoomState.Mini mini = 2;
    }

    message ClosedMini {}

    oneof payload {
        Joined joined = 2;
        Left left = 3;
        MuteUpdated mute_updated = 4;
        Reacted reacted = 5;
        LinkShared link_shared = 6;
        InvitedAdmin invited_admin = 7;
        AddedAdmin added_admin = 8;
        RemovedAdmin removed_admin = 9;
        RenamedRoom renamed_room = 10;
        RecordedScreen recorded_screen = 11;
        MutedByAdmin muted_by_admin = 12;
        VisibilityUpdated visibility_updated = 13;
        PinnedLink pinned_link = 14;
        UnpinnedLink unpinned_link = 15;
        OpenedMini opened_mini = 16;
        ClosedMini closed_mini = 17;
    }
}

enum Visibility {
    VISIBILITY_PUBLIC = 0;
    VISIBILITY_PRIVATE = 1;
}

message RoomState {
    message RoomMember {
        enum Role {
            ROLE_REGULAR = 0;
            ROLE_ADMIN = 1;
        }

        int64 id = 1;
        string display_name = 2;
        string image = 3;
        Role role = 4;
        bool muted = 5;
        uint32 ssrc = 6;
    }

    message Group {
        int64 id = 1;
        string name = 2;
        string image = 3;
    }

    message Mini {
        enum Size {
            SIZE_SMALL = 0;
            SIZE_REGULAR = 1;
            SIZE_LARGE = 2;
        }

        int64 id = 1;
        string slug = 2;
        Size size = 3;
        string name = 4;
    }

    string id = 1;
    string name = 2;
    repeated RoomMember members = 3;
    string role = 4; // @TODO THINK ABOUT ENUM
    Visibility visibility = 5;
    Group group = 6;
    string link = 7;
    string mini_old = 8 [deprecated = true];
    Mini mini = 9;
}
